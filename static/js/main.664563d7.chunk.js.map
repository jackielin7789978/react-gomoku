{"version":3,"sources":["context.js","constants/GlobalStyle.js","sounds/gamestart.mp3","sounds/blackchess.mp3","sounds/whitechess.mp3","sounds/winning.mp3","sounds/click.mp3","utils.js","components/Settings.js","components/Board.js","components/Info.js","components/Modal.js","components/Footer.js","components/App.js","index.js"],"names":["SoundContext","createContext","GameContext","GlobalStyle","createGlobalStyle","useSounds","useSound","gamestart","volume","playStart","blackchess","playBlack","whitechess","playWhite","winning","playWinning","click","playClicked","Container","styled","div","Bar","Circle","span","$isSoundOn","iconStyles","color","position","top","right","Settings","useContext","isSoundOn","setIsSoundOn","onClick","icon","faVolumeUp","style","faVolumeMute","ChessBoard","ChessBorder","Row","Grid","Square","$isBlackNext","Black","White","Board","isBlackNext","setIsBlackNext","currentSquares","winner","history","setHistory","steps","setSteps","grids","Array","fill","map","grid","index","width","row","i","col","x","y","e","stopPropagation","newRow","square","concat","squares","coordinates","handleClick","handleSound","Wrapper","Menu","Chevron","FontAwesomeIcon","$isOpen","MenuList","Info","useState","isOpen","setIsOpen","moves","from","keys","faChevronUp","move","desc","value","step","slice","Number","ModalContainer","EndingMsg","Restart","a","StartGame","Modal","setIsPlaying","FooterContainer","Footer","href","target","rel","MainSection","section","Title","App","isPlaying","length","currentX","currentY","countConsecutives","dx","dy","tempX","tempY","consecutiveCount","calculateWinner","useEffect","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.664563d7.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const SoundContext = createContext({})\r\nexport const GameContext = createContext({})\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    font-family: 'NTR', sans-serif;\r\n    font-family: 'Gemunu Libre', sans-serif;\r\n  }\r\n  body {\r\n    background: #ececec;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n  }\r\n  #root {\r\n    padding: 1px;\r\n  }\r\n  ::-webkit-scrollbar {\r\n    width: 6px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    -webkit-border-radius: 4px;\r\n    border-radius: 4px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 0px;\r\n    border-radius: 0px;\r\n    background: #e0e0e0;\r\n  }\r\n  h1, h2, h3, h4, h5, h6 {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  button {\r\n    border: none;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: #222;\r\n    &:hover {\r\n      color: #222;\r\n    }\r\n    &:active {\r\n      color: #222;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","export default __webpack_public_path__ + \"static/media/gamestart.e6b883e2.mp3\";","export default __webpack_public_path__ + \"static/media/blackchess.a419a936.mp3\";","export default __webpack_public_path__ + \"static/media/whitechess.9c0025d1.mp3\";","export default __webpack_public_path__ + \"static/media/winning.5826d047.mp3\";","export default __webpack_public_path__ + \"static/media/click.7ea98b81.mp3\";","import useSound from 'use-sound'\r\nimport { gamestart, blackchess, whitechess, winning, click } from './sounds'\r\n\r\nexport const useSounds = () => {\r\n  const [playStart] = useSound(gamestart, { volume: 1 })\r\n  const [playBlack] = useSound(blackchess, { volume: 1 })\r\n  const [playWhite] = useSound(whitechess, { volume: 1 })\r\n  const [playWinning] = useSound(winning, { volume: 1 })\r\n  const [playClicked] = useSound(click, { volume: 1 })\r\n\r\n  return { playStart, playBlack, playWhite, playWinning, playClicked }\r\n}\r\n\r\nexport const calculateWinner = (squares, currentX, currentY) => {\r\n  if (!currentX && !currentY) return\r\n\r\n  function countConsecutives(x, y, dx, dy) {\r\n    let color = squares[x][y]\r\n    let tempX = x\r\n    let tempY = y\r\n    let consecutiveCount = 0\r\n    do {\r\n      tempX += dx\r\n      tempY += dy\r\n      // 超出棋盤範圍的就不檢查\r\n      if (tempX < 0 || tempY < 0) break\r\n      if (tempX > 18 || tempY > 18) break\r\n      if (squares[tempX][tempY] === color) {\r\n        consecutiveCount++\r\n      } else {\r\n        break\r\n      }\r\n    } while (consecutiveCount < 5)\r\n    return consecutiveCount\r\n  }\r\n\r\n  if (\r\n    countConsecutives(currentX, currentY, 1, 1) +\r\n      countConsecutives(currentX, currentY, -1, -1) >=\r\n      4 ||\r\n    countConsecutives(currentX, currentY, 1, 0) +\r\n      countConsecutives(currentX, currentY, -1, 0) >=\r\n      4 ||\r\n    countConsecutives(currentX, currentY, 0, 1) +\r\n      countConsecutives(currentX, currentY, 0, -1) >=\r\n      4 ||\r\n    countConsecutives(currentX, currentY, 1, -1) +\r\n      countConsecutives(currentX, currentY, -1, 1) >=\r\n      4\r\n  ) {\r\n    return squares[currentX][currentY]\r\n  }\r\n  return null\r\n}\r\n","import { useContext } from 'react'\r\nimport { SoundContext } from '../context'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faVolumeUp } from '@fortawesome/free-solid-svg-icons'\r\nimport { faVolumeMute } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSounds } from '../utils'\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  width: 50px;\r\n  top: 20px;\r\n  right: 30px;\r\n`\r\nconst Bar = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n  height: 20px;\r\n  background: #aab4be;\r\n  border-radius: 20px;\r\n`\r\nconst Circle = styled.span`\r\n  position: absolute;\r\n  left: ${({ $isSoundOn }) => ($isSoundOn ? '40%' : '0')};\r\n  top: -6px;\r\n  width: 30px;\r\n  height: 30px;\r\n  background: #001e3c;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n`\r\nconst iconStyles = {\r\n  color: '#f5f5f5',\r\n  position: 'absolute',\r\n  top: '6px',\r\n  right: '7px'\r\n}\r\n\r\nexport default function Settings() {\r\n  const { playClicked } = useSounds()\r\n  const { isSoundOn, setIsSoundOn } = useContext(SoundContext)\r\n  return (\r\n    <Container>\r\n      <Bar />\r\n      <Circle\r\n        onClick={() => {\r\n          setIsSoundOn(!isSoundOn)\r\n          playClicked()\r\n        }}\r\n        $isSoundOn={isSoundOn}\r\n      >\r\n        {isSoundOn ? (\r\n          <FontAwesomeIcon icon={faVolumeUp} style={iconStyles} />\r\n        ) : (\r\n          <FontAwesomeIcon icon={faVolumeMute} style={iconStyles} />\r\n        )}\r\n      </Circle>\r\n    </Container>\r\n  )\r\n}\r\n","import { useContext } from 'react'\r\nimport { SoundContext, GameContext } from '../context'\r\nimport { useSounds } from '../utils'\r\nimport styled from 'styled-components'\r\nimport Settings from './Settings'\r\n\r\nconst ChessBoard = styled.div`\r\n  background: #b89874;\r\n  width: 570px;\r\n  height: 570px;\r\n  box-shadow: 4px 8px 12px 1px rgba(60, 60, 60, 0.5);\r\n  overflow: hidden;\r\n  border-radius: 2px;\r\n  position: relative;\r\n  padding-bottom: 20px;\r\n`\r\nconst ChessBorder = styled.div`\r\n  position: absolute;\r\n  background: #b89874;\r\n  z-index: 1;\r\n\r\n  &:first-child {\r\n    width: 100%;\r\n    height: 14px;\r\n    top: 0;\r\n  }\r\n  &:nth-child(2) {\r\n    width: 100%;\r\n    height: 14px;\r\n    bottom: 0;\r\n  }\r\n  &:nth-child(3) {\r\n    width: 14px;\r\n    height: 100%;\r\n    left: 0;\r\n  }\r\n  &:nth-child(4) {\r\n    width: 14px;\r\n    height: 100%;\r\n    right: 0;\r\n  }\r\n`\r\nconst Row = styled.div`\r\n  height: 30px;\r\n  width: 570px;\r\n  position: relative;\r\n`\r\nconst Grid = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n  top: 0;\r\n  left: 0px;\r\n  width: 30px;\r\n  height: 30px;\r\n  border: 1px solid #413320dd;\r\n  transform: translate(-50%, -50%);\r\n`\r\nconst Square = styled.div`\r\n  cursor: pointer;\r\n  position: relative;\r\n  display: inline-block;\r\n  left: 0px;\r\n  width: 30px;\r\n  height: 30px;\r\n  transform: translate(0, -2000%);\r\n  z-index: 2;\r\n  span {\r\n    width: 19px;\r\n    height: 19px;\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-55%, -60%);\r\n    transition: linear 0.1s;\r\n    z-index: 5;\r\n    &:hover {\r\n      background: ${({ $isBlackNext }) =>\r\n        $isBlackNext ? 'rgba(80, 80, 80, 0.8)' : 'rgba(200, 200, 200, 0.8)'};\r\n      box-shadow: 2px 2px 3px 0px rgba(90, 90, 90, 0.7);\r\n    }\r\n  }\r\n`\r\nconst Black = styled.div`\r\n  display: inline-block;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: #111;\r\n  border: 1px solid #333;\r\n  z-index: 5;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  box-shadow: 2px 2px 2px 0px rgba(30, 30, 30, 0.7);\r\n`\r\nconst White = styled(Black)`\r\n  background: #eee;\r\n  border: 1px solid #ddd;\r\n`\r\n\r\nexport default function Board() {\r\n  const { playBlack, playWhite } = useSounds()\r\n  const { isSoundOn } = useContext(SoundContext)\r\n  const {\r\n    isBlackNext,\r\n    setIsBlackNext,\r\n    currentSquares,\r\n    winner,\r\n    history,\r\n    setHistory,\r\n    steps,\r\n    setSteps\r\n  } = useContext(GameContext)\r\n  const handleSound = (isBlackNext) => {\r\n    if (!isSoundOn) return\r\n    isBlackNext ? playBlack() : playWhite()\r\n  }\r\n  const handleClick = (x, y) => {\r\n    if (winner || currentSquares[x][y]) return\r\n    const newRow = currentSquares[x].map((square, index) => {\r\n      if (index !== y) return square\r\n      return isBlackNext ? 'Black' : 'White'\r\n    })\r\n    setHistory(\r\n      history.concat([\r\n        {\r\n          squares: currentSquares.map((row, index) => {\r\n            if (index !== x) return row\r\n            return newRow\r\n          }),\r\n          coordinates: [x, y]\r\n        }\r\n      ])\r\n    )\r\n    setIsBlackNext(!isBlackNext)\r\n    setSteps(steps + 1)\r\n  }\r\n  const grids = Array(20)\r\n    .fill(0)\r\n    .map(() => Array(20).fill(null))\r\n\r\n  return (\r\n    <>\r\n      <Settings />\r\n      <ChessBoard>\r\n        <ChessBorder />\r\n        <ChessBorder />\r\n        <ChessBorder />\r\n        <ChessBorder />\r\n        {grids.map((grid, index) => (\r\n          <Row key={index} style={{ width: '600px' }}>\r\n            {grid.map((row, i) => (\r\n              <Grid key={index[i]} />\r\n            ))}\r\n          </Row>\r\n        ))}\r\n        {currentSquares.map((col, x) => {\r\n          return (\r\n            <Row key={x}>\r\n              {col.map((row, y) => {\r\n                return (\r\n                  <>\r\n                    <Square\r\n                      key={col[y]}\r\n                      $isBlackNext={isBlackNext}\r\n                      onClick={(e) => {\r\n                        e.stopPropagation()\r\n                        handleClick(x, y)\r\n                        handleSound(isBlackNext)\r\n                      }}\r\n                    >\r\n                      <span></span>\r\n                      {!currentSquares[x][y] ? (\r\n                        <></>\r\n                      ) : currentSquares[x][y] === 'Black' ? (\r\n                        <Black />\r\n                      ) : (\r\n                        <White />\r\n                      )}\r\n                    </Square>\r\n                  </>\r\n                )\r\n              })}\r\n            </Row>\r\n          )\r\n        })}\r\n      </ChessBoard>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useContext } from 'react'\r\nimport { GameContext } from '../context'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons'\r\nimport { useSounds } from '../utils'\r\n\r\nconst Wrapper = styled.div`\r\n  margin-left: 20px;\r\n  font-size: 18px;\r\n  h3 {\r\n    margin-left: 10px;\r\n  }\r\n`\r\nconst Menu = styled.div`\r\n  width: 150px;\r\n  padding: 8px;\r\n  margin: 10px 10px 0px 10px;\r\n  position: relative;\r\n  background: #fcfcfc;\r\n`\r\nconst Chevron = styled(FontAwesomeIcon)`\r\n  position: absolute;\r\n  right: 10px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transform: ${({ $isOpen }) => ($isOpen ? 'rotate(180deg)' : 'rotate(0)')};\r\n`\r\nconst MenuList = styled.div`\r\n  width: 150px;\r\n  margin: 0px 10px 10px 10px;\r\n  background: #fcfcfc;\r\n\r\n  ${({ $isOpen }) => ($isOpen ? 'display: block' : 'display: none')};\r\n  div {\r\n    padding: 2px 8px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #e7e7e7;\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Info() {\r\n  const { steps, setSteps, isBlackNext, setIsBlackNext, history, setHistory } =\r\n    useContext(GameContext)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const moves = Array.from(Array(steps).keys())\r\n  const { playClicked } = useSounds()\r\n\r\n  const jumpTo = (step) => {\r\n    setHistory(history.slice(0, step + 1))\r\n    setSteps(Number(step) + 1)\r\n    setIsBlackNext(step % 2 ? false : true)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <h3>Next Player: {isBlackNext ? 'Black' : 'White'}</h3>\r\n      <Menu $isOpen={isOpen}>\r\n        Go Back\r\n        <Chevron\r\n          icon={faChevronUp}\r\n          $isOpen={isOpen}\r\n          onClick={() => {\r\n            setIsOpen(!isOpen)\r\n          }}\r\n        />\r\n      </Menu>\r\n      <MenuList $isOpen={isOpen}>\r\n        {moves.map((move) => {\r\n          const desc = move ? `Go to step ${move}` : `Go to game start`\r\n          return (\r\n            <div\r\n              key={move}\r\n              value={move}\r\n              onClick={() => {\r\n                jumpTo(move)\r\n                playClicked()\r\n                setIsOpen(!isOpen)\r\n              }}\r\n            >\r\n              {desc}\r\n            </div>\r\n          )\r\n        })}\r\n      </MenuList>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import { useContext } from 'react'\r\nimport { SoundContext, GameContext } from '../context'\r\nimport styled from 'styled-components'\r\nimport { useSounds } from '../utils'\r\n\r\nconst ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(25, 25, 30, 0.6);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 2;\r\n`\r\nconst EndingMsg = styled.div`\r\n  font-size: 120px;\r\n  margin-bottom: 50px;\r\n  color: #eee;\r\n`\r\nconst Restart = styled.a`\r\n  font-size: 30px;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n  transition: ease 0.1s;\r\n  color: #d5d5d5;\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`\r\nconst StartGame = styled(Restart)`\r\n  font-size: 54px;\r\n`\r\n\r\nexport default function Modal() {\r\n  const { playStart, playClicked } = useSounds()\r\n  const { isSoundOn } = useContext(SoundContext)\r\n  const {\r\n    setIsPlaying,\r\n    winner,\r\n    history,\r\n    setHistory,\r\n    setIsBlackNext,\r\n    setSteps\r\n  } = useContext(GameContext)\r\n\r\n  return (\r\n    <ModalContainer>\r\n      {!winner && (\r\n        <StartGame\r\n          onClick={() => {\r\n            setIsPlaying(true)\r\n            isSoundOn && playStart()\r\n          }}\r\n        >\r\n          Start Game\r\n        </StartGame>\r\n      )}\r\n      {winner && (\r\n        <>\r\n          <EndingMsg>Winner is {winner}</EndingMsg>\r\n          <Restart\r\n            onClick={() => {\r\n              isSoundOn && playClicked()\r\n              setIsPlaying(true)\r\n              isSoundOn && playStart()\r\n              setHistory(history.slice(0, 1))\r\n              setSteps(0)\r\n              setIsBlackNext(true)\r\n            }}\r\n          >\r\n            Play Again\r\n          </Restart>\r\n        </>\r\n      )}\r\n    </ModalContainer>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst FooterContainer = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  padding: 20px 0px;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  letter-spacing: 1.5px;\r\n  a {\r\n    color: #8398a3;\r\n    transition: ease 0.2s;\r\n    &:hover {\r\n      color: #41548b;\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <FooterContainer>\r\n      © Copyright 2021. Made by {'  '}\r\n      <a\r\n        href='https://github.com/jackielin7789978'\r\n        target='_blank'\r\n        rel='noreferrer'\r\n      >\r\n        Jackie Lin\r\n      </a>\r\n    </FooterContainer>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { GameContext, SoundContext } from '../context'\r\nimport styled from 'styled-components'\r\nimport GlobalStyle from '../constants/GlobalStyle'\r\nimport Board from './Board'\r\nimport Info from './Info'\r\nimport Modal from './Modal'\r\nimport Footer from './Footer'\r\nimport { calculateWinner, useSounds } from '../utils'\r\n\r\nconst MainSection = styled.section`\r\n  display: flex;\r\n  justify-content: center;\r\n  min-width: 50vw;\r\n  max-width: 90vw;\r\n  margin: 80px auto;\r\n`\r\nconst Title = styled.div`\r\n  font-size: 48px;\r\n  color: #222;\r\n  text-align: center;\r\n  letter-spacing: 1.5px;\r\n  margin: 5vh auto;\r\n`\r\n\r\nexport default function App() {\r\n  const [isPlaying, setIsPlaying] = useState(false)\r\n  const [isBlackNext, setIsBlackNext] = useState(true)\r\n  const [history, setHistory] = useState([\r\n    {\r\n      squares: Array(19)\r\n        .fill(0)\r\n        .map(() => Array(19).fill(null)),\r\n      coordinates: [null, null]\r\n    }\r\n  ])\r\n  const [steps, setSteps] = useState(0)\r\n  const currentSquares = history[history.length - 1].squares\r\n  const currentX = history[history.length - 1].coordinates[0]\r\n  const currentY = history[history.length - 1].coordinates[1]\r\n  const { playWinning } = useSounds()\r\n  const winner = calculateWinner(currentSquares, currentX, currentY)\r\n  const [isSoundOn, setIsSoundOn] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (winner) {\r\n      setIsPlaying(false)\r\n      isSoundOn && playWinning()\r\n    }\r\n  }, [isSoundOn, playWinning, winner])\r\n\r\n  return (\r\n    <SoundContext.Provider value={{ isSoundOn, setIsSoundOn }}>\r\n      <GameContext.Provider\r\n        value={{\r\n          currentSquares,\r\n          isBlackNext,\r\n          setIsBlackNext,\r\n          setIsPlaying,\r\n          history,\r\n          setHistory,\r\n          winner,\r\n          steps,\r\n          setSteps\r\n        }}\r\n      >\r\n        <GlobalStyle />\r\n        <Title>Gomoku Game</Title>\r\n        <MainSection>\r\n          <Board />\r\n          <Info />\r\n        </MainSection>\r\n        {!isPlaying && <Modal />}\r\n        <Footer />\r\n      </GameContext.Provider>\r\n    </SoundContext.Provider>\r\n  )\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}