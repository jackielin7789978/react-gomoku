{"version":3,"sources":["constants/GlobalStyle.js","components/Board.js","components/Info.js","components/Modal.js","components/Footer.js","utils.js","components/App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","ChessBoard","styled","div","CoverBars","Wrapper","Row","Square","Cross","Black","White","Board","handleClick","board","squares","map","col","x","row","y","onClick","Info","ModalContainer","EndingMsg","Restart","a","Modal","winner","href","FooterContainer","Footer","target","rel","Title","App","useState","isBlackNext","setIsBlackNext","Array","fill","coordinates","setBoard","currentX","currentY","countConsecutives","dx","dy","color","tempX","tempY","consecutiveCount","calculateWinner","console","log","newRow","square","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cec2e0d2.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    font-family: 'Kalam', cursive;\r\n  }\r\n  body {\r\n    background: #eee;\r\n    height: 100vh;\r\n    overflow: hidden;\r\n  }\r\n  #root {\r\n    padding: 1px;\r\n  }\r\n  h1, h2, h3, h4, h5, h6 {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  button {\r\n    border: none;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: #222;\r\n    &:hover {\r\n      color: #222;\r\n    }\r\n    &:active {\r\n      color: #222;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import styled from 'styled-components'\r\n\r\nconst ChessBoard = styled.div`\r\n  background: #bb9966;\r\n  width: 570px;\r\n  height: 570px;\r\n  margin: 0 auto;\r\n  box-shadow: 4px 8px 12px 1px rgba(60, 60, 60, 0.5);\r\n  border-radius: 2px;\r\n  border: 1px solid transparent;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  overflow: hidden;\r\n`\r\nconst CoverBars = styled.div`\r\n  position: absolute;\r\n  background: #bb9966;\r\n  z-index: 2;\r\n\r\n  &:first-child {\r\n    width: 100%;\r\n    height: 14px;\r\n  }\r\n  &:nth-child(2) {\r\n    width: 100%;\r\n    height: 13px;\r\n    bottom: 0;\r\n  }\r\n  &:nth-child(3) {\r\n    width: 14px;\r\n    height: 100%;\r\n    left: 0;\r\n  }\r\n  &:nth-child(4) {\r\n    width: 12px;\r\n    height: 100%;\r\n    right: 0;\r\n  }\r\n`\r\nconst Wrapper = styled.div`\r\n  width: 541px;\r\n  height: 541px;\r\n  position: relative;\r\n  top: 14px;\r\n  left: 15px;\r\n  border-right: 1px solid #4a260f;\r\n`\r\nconst Row = styled.div`\r\n  height: 30px;\r\n  width: 570px;\r\n  position: relative;\r\n`\r\nconst Square = styled.div`\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  width: 30px;\r\n  height: 30px;\r\n  position: relative;\r\n  right: 15px;\r\n  bottom: 15px;\r\n`\r\nconst Cross = styled.div`\r\n  background: #4a260f;\r\n  height: 30px;\r\n  width: 1px;\r\n  position: relative;\r\n  left: -16px;\r\n\r\n  &:after {\r\n    background: #4a260f;\r\n    content: '';\r\n    width: 30px;\r\n    height: 1px;\r\n    position: absolute;\r\n    top: 50%;\r\n  }\r\n`\r\nconst Black = styled.div`\r\n  display: inline-block;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background: #111;\r\n  border: 1px solid #333;\r\n  z-index: 5;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  box-shadow: 2px 2px 2px 0px rgba(30, 30, 30, 0.7);\r\n`\r\nconst White = styled(Black)`\r\n  background: #eee;\r\n  border: 1px solid #ddd;\r\n`\r\n\r\nexport default function Board({ handleClick, board }) {\r\n  return (\r\n    <ChessBoard>\r\n      <CoverBars />\r\n      <CoverBars />\r\n      <CoverBars />\r\n      <CoverBars />\r\n      <Wrapper>\r\n        {board.squares.map((col, x) => {\r\n          return (\r\n            <Row key={x}>\r\n              {col.map((row, y) => {\r\n                return (\r\n                  <Square\r\n                    key={y}\r\n                    onClick={() => {\r\n                      handleClick(x, y)\r\n                    }}\r\n                  >\r\n                    <Cross />\r\n                    {!board.squares[x][y] ? (\r\n                      <></>\r\n                    ) : board.squares[x][y] === 'Black' ? (\r\n                      <Black />\r\n                    ) : (\r\n                      <White />\r\n                    )}\r\n                  </Square>\r\n                )\r\n              })}\r\n            </Row>\r\n          )\r\n        })}\r\n      </Wrapper>\r\n    </ChessBoard>\r\n  )\r\n}\r\n","export default function Info() {\r\n  return <></>\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(25, 25, 30, 0.6);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 2;\r\n`\r\nconst EndingMsg = styled.div`\r\n  font-size: 120px;\r\n  margin-bottom: 50px;\r\n  color: #e5e5e5;\r\n`\r\nconst Restart = styled.a`\r\n  font-size: 30px;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  margin-bottom: 20px;\r\n  transition: ease 0.1s;\r\n  color: #d5d5d5;\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`\r\n\r\nexport default function Modal({ winner }) {\r\n  return (\r\n    <ModalContainer>\r\n      <EndingMsg>Winner is {winner}</EndingMsg>\r\n      <Restart href='/'>Play Again</Restart>\r\n    </ModalContainer>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst FooterContainer = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  padding: 30px 0px;\r\n  text-align: center;\r\n  font-size: 18px;\r\n  a {\r\n    color: #8398a3;\r\n    transition: ease 0.2s;\r\n    &:hover {\r\n      color: #4290b8;\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <FooterContainer>\r\n      © Copyright 2021. Made with ♥ by{'  '}\r\n      <a\r\n        href='https://github.com/jackielin7789978'\r\n        target='_blank'\r\n        rel='noreferrer'\r\n      >\r\n        Jackie Lin\r\n      </a>\r\n    </FooterContainer>\r\n  )\r\n}\r\n","export const calculateWinner = (squares, currentX, currentY) => {\r\n  if (!currentX && !currentY) return\r\n\r\n  function countConsecutives(x, y, dx, dy) {\r\n    let color = squares[x][y]\r\n    let tempX = x\r\n    let tempY = y\r\n    let consecutiveCount = 0\r\n    do {\r\n      tempX += dx\r\n      tempY += dy\r\n      // 超出棋盤範圍的就不檢查\r\n      if (tempX < 0 || tempY < 0) break\r\n      if (tempX > 18 || tempY > 18) break\r\n      if (squares[tempX][tempY] === color) {\r\n        consecutiveCount++\r\n      } else {\r\n        break\r\n      }\r\n    } while (consecutiveCount < 5)\r\n    return consecutiveCount\r\n  }\r\n\r\n  if (\r\n    countConsecutives(currentX, currentY, 1, 1) +\r\n      countConsecutives(currentX, currentY, -1, -1) >=\r\n      4 ||\r\n    countConsecutives(currentX, currentY, 1, 0) +\r\n      countConsecutives(currentX, currentY, -1, 0) >=\r\n      4 ||\r\n    countConsecutives(currentX, currentY, 0, 1) +\r\n      countConsecutives(currentX, currentY, 0, -1) >=\r\n      4 ||\r\n    countConsecutives(currentX, currentY, 1, -1) +\r\n      countConsecutives(currentX, currentY, -1, 1) >=\r\n      4\r\n  ) {\r\n    return squares[currentX][currentY]\r\n  }\r\n  return null\r\n}\r\n","import { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport GlobalStyle from '../constants/GlobalStyle'\r\nimport Board from './Board'\r\nimport Info from './Info'\r\nimport Modal from './Modal'\r\nimport Footer from './Footer'\r\nimport { calculateWinner } from '../utils'\r\n\r\nconst Title = styled.div`\r\n  font-size: 36px;\r\n  color: #222;\r\n  width: 500px;\r\n  text-align: center;\r\n  margin: 80px auto 40px auto;\r\n`\r\n\r\nexport default function App() {\r\n  const [isBlackNext, setIsBlackNext] = useState(true)\r\n  const [board, setBoard] = useState({\r\n    squares: Array(19)\r\n      .fill(0)\r\n      .map(() => Array(19).fill(null)),\r\n    coordinates: [null, null]\r\n  })\r\n\r\n  const currentSquares = board.squares\r\n  const currentX = board.coordinates[0]\r\n  const currentY = board.coordinates[1]\r\n  const winner = calculateWinner(currentSquares, currentX, currentY)\r\n\r\n  function handleClick(x, y) {\r\n    console.log(x, y)\r\n    if (winner || board.squares[x][y]) return\r\n    const newRow = board.squares[x].map((square, index) => {\r\n      if (index !== y) return square\r\n      return isBlackNext ? 'Black' : 'White'\r\n    })\r\n    setBoard({\r\n      squares: board.squares.map((row, index) => {\r\n        if (index !== x) return row\r\n        return newRow\r\n      }),\r\n      coordinates: [x, y]\r\n    })\r\n    setIsBlackNext(!isBlackNext)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Title>Gomoku Game</Title>\r\n      <Board board={board} handleClick={handleClick} />\r\n      <Info />\r\n      {winner && <Modal winner={winner} />}\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}